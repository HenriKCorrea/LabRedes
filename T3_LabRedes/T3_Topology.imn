node n1 {
    type router
    model PC
    network-config {
	hostname client
	!
	interface eth0
	 ipv6 address 2001:0::20/64
	 ip address 22.0.0.22/24
	!
    }
    canvas c1
    iconcoords {139.0 404.0}
    labelcoords {139.0 436.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('startclient.sh', )
	cmdup=('sh startclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:startclient.sh
	custom-command startclient.sh
	config {
	#!/bin/sh
	
	# Assigining an IP address and mask to 'tun0' interface
	openvpn --mktun --dev tun0 
	ip link set tun0 up
	ip addr add 7.0.0.2/24 dev tun0
	
	# Modifying IP routing tables
	route del default
	# 'server' is the IP address of the proxy server
	# 'gateway' and 'interface' can be obtained by usint the command: 'route -n'
	route add -host 33.0.0.33 gw 22.0.0.1 dev eth0
	route add default gw 7.0.0.1 tun0
	
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n2 {
    type router
    model router
    network-config {
	hostname R2
	!
	interface eth1
	 ip address 10.0.2.2/24
	 ipv6 address 2001:2::2/64
	!
	interface eth0
	 ipv6 address 2001:0::1/64
	 ip address 22.0.0.1/24
	!
    }
    canvas c1
    iconcoords {285.0 326.0}
    labelcoords {285.0 358.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n3}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	cmdup=('route add default gw 10.0.2.1', )
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward SSH UserDefined}
}

node n3 {
    type router
    model router
    network-config {
	hostname R1
	!
	interface eth1
	 ip address 10.0.3.1/24
	 ipv6 address 2001:3::1/64
	!
	interface eth0
	 ip address 10.0.2.1/24
	 ipv6 address 2001:2::1/64
	!
	interface eth2
	 ip address 10.0.4.1/24
	 ipv6 address 2001:4::1/64
	!
    }
    canvas c1
    iconcoords {511.0 327.0}
    labelcoords {511.0 359.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n4}
    interface-peer {eth2 n5}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	cmdup=('route add -net 22.0.0.0 netmask 255.255.255.0 gw 10.0.2.2', 'route add -net 33.0.0.0 netmask 255.255.255.0 gw 10.0.3.2', 'route add -net 44.0.0.0 netmask 255.255.255.0 gw 10.0.4.2', )
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward UserDefined}
}

node n4 {
    type router
    model router
    network-config {
	hostname R3
	!
	interface eth0
	 ip address 10.0.3.2/24
	 ipv6 address 2001:3::2/64
	!
	interface eth1
	 ipv6 address 2001:3::1/64
	 ip address 33.0.0.1/24
	!
    }
    canvas c1
    iconcoords {737.0 327.0}
    labelcoords {737.0 359.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n6}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	cmdup=('route add default gw 10.0.3.1', )
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward UserDefined}
}

node n5 {
    type router
    model router
    network-config {
	hostname R4
	!
	interface eth1
	 ipv6 address 2001:5::1/64
	 ip address 44.0.0.1/24
	!
	interface eth0
	 ip address 10.0.4.2/24
	 ipv6 address 2001:4::2/64
	!
    }
    canvas c1
    iconcoords {513.0 202.0}
    labelcoords {548.0 211.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n7}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	cmdup=('route add default gw 10.0.4.1', )
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward UserDefined}
}

node n6 {
    type router
    model PC
    network-config {
	hostname server
	!
	interface eth0
	 ipv6 address 2001:3::20/64
	 ip address 33.0.0.33/24
	!
    }
    canvas c1
    iconcoords {903.0 412.0}
    labelcoords {903.0 444.0}
    interface-peer {eth0 n4}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('serverconfig.sh', )
	cmdup=('sh serverconfig.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:serverconfig.sh
	custom-command serverconfig.sh
	config {
	#!/bin/sh
	# Assigining an IP address and mask to 'tun0' interface
	openvpn --mktun --dev tun0 
	ip link set tun0 up
	ip addr add 7.0.0.1/24 dev tun0
	
	# Preventing the kernel to reply to any ICMP pings
	sysctl -w net.ipv4.icmp_echo_ignore_all=1
	
	# Enabling IP forwarding
	sysctl -w net.ipv4.ip_forward=1
	
	# Adding an iptables rule to masquerade for 7.0.0.0/8
	iptables -t nat -A POSTROUTING -s 7.0.0.0/8 -j MASQUERADE
	}
    }
    services {DefaultRoute UserDefined}
}

node n7 {
    type router
    model PC
    network-config {
	hostname service
	!
	interface eth0
	 ipv6 address 2001:5::20/64
	 ip address 44.0.0.44/24
	!
    }
    canvas c1
    iconcoords {513.0 57.0}
    labelcoords {558.0 66.0}
    interface-peer {eth0 n5}
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l2 {
    nodes {n2 n3}
    bandwidth 0
}

link l3 {
    nodes {n3 n4}
    bandwidth 0
}

link l4 {
    nodes {n4 n6}
    bandwidth 0
}

link l5 {
    nodes {n3 n5}
    bandwidth 0
}

link l6 {
    nodes {n5 n7}
    bandwidth 0
}

annotation a1 {
    type text
    iconcoords {580.0 246.0}
    label {}
    canvas c1
}

annotation a2 {
    type text
    iconcoords {562.0 246.0}
    label {}
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

